openapi: 3.0.0
info:
  description: This is Gateway API to upload files and create a easy way to integrate with Gateway Protocol.
  title: Gateway API
  contact: {}
  version: 3.0.0-beta
paths:
  /accounts:
    post:
      description: Create a new account
      tags:
        - Accounts
      summary: Create account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.AccountCreateRequest'
        description: Account data
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.TokenResponse'
  /accounts/me:
    get:
      security:
        - BearerAuth: []
      description: Get my account
      tags:
        - Accounts
      summary: Get my account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.MyAccountResponse'
    patch:
      security:
        - BearerAuth: []
      description: Update account
      tags:
        - Accounts
      summary: Update account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.AccountUpdateRequest'
        description: Account data
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.MyAccountResponse'
  /accounts/me/wallets:
    post:
      security:
        - BearerAuth: []
      description: Add a new wallet
      tags:
        - Accounts
      summary: Add wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.WalletCreateRequest'
        description: Wallet data
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.MyAccountResponse'
  '/accounts/me/wallets/{address}':
    delete:
      security:
        - BearerAuth: []
      description: Remove wallet
      tags:
        - Accounts
      summary: Remove wallet
      parameters:
        - description: Wallet Address
          name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.MyAccountResponse'
  /auth:
    post:
      description: Authenticate account
      tags:
        - Auth
      summary: Authenticate account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.AuthRequest'
        description: model.AuthRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.TokenResponse'
  /auth/message:
    get:
      description: Generate sign message
      tags:
        - Auth
      summary: Generate sign message
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.MessageResponse'
  /auth/refresh-token:
    get:
      security:
        - BearerAuth: []
      description: Refresh token
      tags:
        - Auth
      summary: Refresh token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.TokenResponse'
  /data-assets:
    post:
      security:
        - BearerAuth: []
      description: 'Create a new data asset. Supports both structured data submission (application/json) and file uploads (multipart/form-data). Note: All date fields must be in RFC 3339 format (e.g., 2025-09-02T14:31:00Z).'
      tags:
        - Data assets
      summary: Create a new data asset
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: binary
                  description: File to be uploaded
                acl:
                  type: string
                  description: Access control list (ACL) for the data asset
                expiration_date:
                  type: string
                  format: date-time
                  description: Expiration date for the data asset (in RFC 3339 format)
          application/json:
            schema:
              $ref: '#/components/schemas/model.CreateDataAssetRequest'
        description: Create Data Asset Request. Use application/json for structured data.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.DataAssetIDRequestAndResponse'
  /data-assets/created:
    get:
      security:
        - BearerAuth: []
      description: Get all created data assets that belong to the authenticated user
      tags:
        - Data assets
      summary: Get created data assets
      parameters:
        - description: Page number
          name: page
          in: query
          schema:
            type: integer
        - description: Page size
          name: page_size
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/helper.PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/model.PublicDataAsset'
  /data-assets/received:
    get:
      security:
        - BearerAuth: []
      description: Get all received data assets that belong to the authenticated user
      tags:
        - Data assets
      summary: Get received data assets
      parameters:
        - description: Page number
          name: page
          in: query
          schema:
            type: integer
        - description: Page size
          name: page_size
          in: query
          schema:
            type: integer
        - description: Role (any AccessLevel)
          name: role
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/helper.PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/model.PublicDataAsset'
  '/data-assets/{id}':
    get:
      security:
        - BearerAuth: []
      description: Get data asset by ID
      tags:
        - Data assets
      summary: Get data asset by ID
      parameters:
        - description: Data Asset ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.PublicDataAsset'
    put:
      security:
        - BearerAuth: []
      description: 'Update data asset by ID. For structured data submission, use application/json. For file uploads, use multipart/form-data. Note: All date fields must be in RFC 3339 format (e.g., 2025-09-02T14:31:00Z).'
      tags:
        - Data assets
      summary: Update data asset by ID
      parameters:
        - description: Data Asset ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: binary
                  description: File to be uploaded
                acl:
                  type: string
                  description: Access control list (ACL)
                expiration_date:
                  type: string
                  format: date-time
                  description: Expiration date for the data asset (in RFC 3339 format)
          application/json:
            schema:
              $ref: '#/components/schemas/model.UpdateDataAssetRequest'
        description: 'Update Data Asset Request. Use application/json for structured data and multipart/form-data for file uploads. Dates should be in RFC 3339 format (e.g., 2025-09-02T14:31:00Z).'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.PublicDataAsset'
    delete:
      security:
        - BearerAuth: []
      description: Delete data asset by ID
      tags:
        - Data assets
      summary: Delete data asset by ID
      parameters:
        - description: Data Asset ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses.MessageResponse'
  '/data-assets/{id}/acl':
    post:
      security:
        - BearerAuth: []
      description: Assign ACL items to data asset
      tags:
        - Data assets
      summary: Assign ACL items to data asset
      parameters:
        - description: Data Asset ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/model.ACLRequest'
        description: Assign ACL Items Request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/model.PublicACL'
    patch:
      security:
        - BearerAuth: []
      description: Update ACL items to data asset
      tags:
        - Data assets
      summary: Update ACL items to data asset
      parameters:
        - description: Data Asset ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/model.ACLRequest'
        description: Update ACL Items Request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/model.PublicACL'
  '/data-assets/{id}/acl/delete':
    patch:
      security:
        - BearerAuth: []
      description: Delete assigned role by ACL
      tags:
        - Data assets
      summary: Delete assigned role by ACL
      parameters:
        - description: Data Asset ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/model.ACLRequest'
        description: Delete Assigned ACL Items Request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses.MessageResponse'
  '/data-assets/{id}/download':
    get:
      security:
        - BearerAuth: []
      description: Download data asset by ID
      tags:
        - Data assets
      summary: Download data asset by ID
      parameters:
        - description: Data Asset ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
  '/data-assets/{id}/share':
    post:
      security:
        - BearerAuth: []
      description: Share data asset by ID. To share you need to have a sharing role.
      tags:
        - Data assets
      summary: Share data asset by ID
      parameters:
        - description: Data Asset ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.ShareDataAssetRequest'
        description: Share Data Asset Request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/model.PublicACL'
  /data-models:
    get:
      description: Get all data models
      tags:
        - Data models
      summary: Get data models
      parameters:
        - description: Page number
          name: page
          in: query
          schema:
            type: integer
            default: 1
        - description: Page size
          name: page_size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/helper.PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/model.DataModel'
    post:
      security:
        - BearerAuth: []
      description: Create a new data model
      tags:
        - Data models
      summary: Create data model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.DataModelRequest'
        description: Data Model
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.DataModel'
  /data-models/me:
    get:
      security:
        - BearerAuth: []
      description: Get all data models created by a user
      tags:
        - Data models
      summary: Get data models by user
      parameters:
        - description: Page number
          name: page
          in: query
          schema:
            type: integer
            default: 1
        - description: Page size
          name: page_size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/helper.PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/model.DataModel'
  '/data-models/{id}':
    get:
      description: Get a data model by its ID
      tags:
        - Data models
      summary: Get data model by ID
      parameters:
        - description: Data Model ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.DataModel'
    put:
      security:
        - BearerAuth: []
      description: Update a data model
      tags:
        - Data models
      summary: Update data model
      parameters:
        - description: Data Model ID
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.DataModel'
        description: Data Model
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.DataModel'
servers:
  - url: 'https://localhost:8080'
  - url: 'http://localhost:8080'
components:
  securitySchemes:
    BearerAuth:
      description: Type "Bearer" followed by a space and the JWT token.
      type: apiKey
      name: Authorization
      in: header
  schemas:
    helper.Links:
      type: object
      required:
        - first
        - last
        - next
        - previous
      properties:
        first:
          type: string
        last:
          type: string
        next:
          type: string
        previous:
          type: string
    helper.Meta:
      type: object
      required:
        - current_page
        - items_per_page
        - total_items
        - total_pages
      properties:
        current_page:
          type: integer
        items_per_page:
          type: integer
        total_items:
          type: integer
        total_pages:
          type: integer
    helper.PaginatedResponse:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data: {}
        links:
          $ref: '#/components/schemas/helper.Links'
        meta:
          $ref: '#/components/schemas/helper.Meta'
    model.ACLRequest:
      type: object
      required:
        - address
        - roles
      properties:
        address:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/model.AccessLevel'
    model.AccessLevel:
      type: string
      enum:
        - view
        - update
        - delete
        - share
      x-enum-varnames:
        - RoleView
        - RoleUpdate
        - RoleDelete
        - RoleShare
    model.AccountCreateRequest:
      type: object
      required:
        - message
        - signature
        - username
        - wallet_address
      properties:
        message:
          type: string
        signature:
          type: string
        username:
          type: string
        wallet_address:
          type: string
    model.AccountUpdateRequest:
      type: object
      properties:
        profile_picture:
          type: string
        username:
          type: string
    model.AuthRequest:
      type: object
      required:
        - message
        - signature
        - wallet_address
      properties:
        message:
          type: string
        signature:
          type: string
        wallet_address:
          type: string
    model.CreateDataAssetRequest:
      type: object
      required:
        - name
      properties:
        acl:
          type: array
          items:
            $ref: '#/components/schemas/model.ACLRequest'
        claim:
          type: object
        data_model_id:
          type: integer
        expiration_date:
          type: string
        name:
          type: string
        tags:
          type: array
          items:
            type: string
    model.DataAssetIDRequestAndResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    model.DataModel:
      type: object
      required:
        - created_by
        - description
        - id
        - schema
        - title
      properties:
        created_at:
          type: string
        created_by:
          type: string
        deleted_at:
          type: string
        description:
          type: string
        id:
          type: integer
        schema:
          type: object
        tags:
          type: array
          items:
            type: string
        title:
          type: string
        updated_at:
          type: string
    model.DataModelRequest:
      type: object
      required:
        - description
        - schema
        - title
      properties:
        description:
          type: string
        schema:
          type: object
        tags:
          type: array
          items:
            type: string
        title:
          type: string
    model.MessageResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    model.MyAccountResponse:
      type: object
      required:
        - created_at
        - did
        - storage_size
        - updated_at
        - username
        - username_updated_at
        - wallet_addresses
      properties:
        created_at:
          type: string
        did:
          type: string
        profile_picture:
          type: string
        storage_size:
          type: integer
        updated_at:
          type: string
        username:
          type: string
        username_updated_at:
          type: string
        wallet_addresses:
          type: array
          items:
            $ref: '#/components/schemas/model.WalletAddress'
    model.PublicACL:
      type: object
      required:
        - address
        - data_asset_id
        - roles
        - solana_address
      properties:
        address:
          type: string
        created_at:
          type: string
        data_asset_id:
          type: integer
        is_authority:
          type: boolean
        roles:
          type: array
          items:
            type: string
        solana_address:
          type: string
        updated_at:
          type: string
    model.PublicDataAsset:
      type: object
      required:
        - acl
        - created_by
        - fid
        - id
        - name
        - size
        - tags
        - transaction_id
        - type
      properties:
        acl:
          type: array
          items:
            $ref: '#/components/schemas/model.PublicACL'
        created_at:
          type: string
        created_by:
          type: string
        data_model_id:
          type: integer
        expiration_date:
          type: string
        fid:
          type: string
        id:
          type: integer
        name:
          type: string
        size:
          type: integer
        tags:
          type: array
          items:
            type: string
        transaction_id:
          type: string
        type:
          type: string
        updated_at:
          type: string
    model.ShareDataAssetRequest:
      type: object
      required:
        - addresses
      properties:
        addresses:
          type: array
          items:
            type: string
    model.TokenResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    model.UpdateDataAssetRequest:
      type: object
      properties:
        claim:
          type: object
        expiration_date:
          type: string
        name:
          type: string
    model.WalletAddress:
      type: object
      required:
        - account_id
        - address
        - chain
        - created_at
        - id
      properties:
        account_id:
          type: integer
        address:
          type: string
        chain:
          type: string
        created_at:
          type: string
        id:
          type: integer
        updated_at:
          type: string
    model.WalletCreateRequest:
      type: object
      required:
        - address
      properties:
        address:
          type: string
    responses.MessageResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
